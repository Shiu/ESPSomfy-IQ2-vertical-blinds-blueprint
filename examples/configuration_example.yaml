# Percentage-Based Vertical Blinds Configuration
# Only ONE automation per blind is required!

# Step 1: Create input_number helpers for position tracking
input_number:
  dining_blinds_position:
    name: Dining Blinds Position
    min: 1
    max: 100
    step: 1
    initial: 100
    unit_of_measurement: "%"
    icon: mdi:blinds
  
  lounge_blinds_position:
    name: Lounge Blinds Position
    min: 1
    max: 100
    step: 1
    initial: 100
    unit_of_measurement: "%"
    icon: mdi:blinds
  
  # Optional: For custom position input
  dining_blinds_custom:
    name: Dining Custom Position
    min: 1
    max: 100
    step: 1
    initial: 50
    unit_of_measurement: "%"

# Step 2: Create helper script to fire events from dashboard
script:
  move_vertical_blinds:
    alias: Move Vertical Blinds
    fields:
      blind_id:
        description: The blind identifier (e.g., dining, lounge)
      position:
        description: Target position percentage (1-100)
    sequence:
      - event: vertical_blinds_move
        event_data:
          blind_id: "{{ blind_id }}"
          position: "{{ position }}"

# Step 3: Dashboard Configuration with 11 preset buttons
dashboard_example:
  type: vertical-stack
  cards:
    - type: markdown
      content: "## Dining Blinds"
    
    # Current position display
    - type: entities
      entities:
        - entity: input_number.dining_blinds_position
          name: Current Position
    
    # Control buttons - Row 1
    - type: horizontal-stack
      cards:
        - type: button
          name: Open
          icon: mdi:blinds-open
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: dining
              position: 100
        
        - type: button
          name: 90%
          icon: mdi:blinds
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: dining
              position: 90
        
        - type: button
          name: 80%
          icon: mdi:blinds
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: dining
              position: 80
    
    # Row 2
    - type: horizontal-stack
      cards:
        - type: button
          name: 70%
          icon: mdi:blinds
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: dining
              position: 70
        
        - type: button
          name: 60%
          icon: mdi:blinds
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: dining
              position: 60
        
        - type: button
          name: 50%
          icon: mdi:blinds
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: dining
              position: 50
    
    # Row 3
    - type: horizontal-stack
      cards:
        - type: button
          name: 40%
          icon: mdi:blinds
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: dining
              position: 40
        
        - type: button
          name: 30%
          icon: mdi:blinds
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: dining
              position: 30
        
        - type: button
          name: 20%
          icon: mdi:blinds
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: dining
              position: 20
    
    # Row 4
    - type: horizontal-stack
      cards:
        - type: button
          name: 10%
          icon: mdi:blinds
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: dining
              position: 10
        
        - type: button
          name: Closed
          icon: mdi:blinds-closed
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: dining
              position: 1
        
        # Optional: Custom position from slider
        - type: button
          name: Custom
          icon: mdi:tune
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: dining
              position: "{{ states('input_number.dining_blinds_custom') | int }}"
    
    # Optional: Slider for custom positions
    - type: entities
      title: Custom Position
      entities:
        - entity: input_number.dining_blinds_custom
          name: Set Custom %

    # Lounge Example (simpler 3-button version)
    - type: markdown
      content: "## Lounge Blinds"
    
    - type: entities
      entities:
        - entity: input_number.lounge_blinds_position
          name: Current Position
    
    - type: horizontal-stack
      cards:
        - type: button
          name: Open
          icon: mdi:blinds-open
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: lounge
              position: 100
        
        - type: button
          name: 50%
          icon: mdi:blinds
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: lounge
              position: 50
        
        - type: button
          name: Closed
          icon: mdi:blinds-closed
          tap_action:
            action: call-service
            service: script.move_vertical_blinds
            data:
              blind_id: lounge
              position: 1

# Automation Creation Guide:
#
# For each blind, create ONE automation using the blueprint:
#
# 1. Go to Settings → Automations & Scenes → Automations
# 2. Create Automation → Use Blueprint
# 3. Select "ESPSomfy Vertical Blinds Controller (Percentage-Based)"
# 4. Configure:
#    - Blind Entity: cover.dining_blinds
#    - Blind ID: dining (unique identifier)
#    - Position Tracker: input_number.dining_blinds_position
#    - Full Travel Time: e.g., 30000 (30 seconds in milliseconds)
#    - Soft Start Compensation: 1000 (start with 1 second)
#    - Reset Buffer: 3000 (3 seconds extra when resetting)
# 5. Save with a descriptive name like "Dining Blinds Controller"
#
# The automation will listen for events like:
#   event_type: vertical_blinds_move
#   event_data:
#     blind_id: dining
#     position: 75
#
# You can test from Developer Tools → Events:
# Event Type: vertical_blinds_move
# Event Data (YAML):
#   blind_id: dining
#   position: 50