blueprint:
  name: ESPSomfy Vertical Blinds Controller (4-Position)
  description: >
    Control system for ESPSomfy vertical blinds with up to 4 preset positions.
    Uses position indices (1,2,3,4) instead of percentages for clarity.
    
    Position 1 = Closed (or nearly closed)
    Position 2 = First middle position
    Position 3 = Second middle position  
    Position 4 = Fully open
    
    Works around ESPSomfy limitations by using direct motor commands with precise delays.
    Perfect for Benthin IQ2 motors with soft start/stop.
  
  domain: automation
  input:
    blind_entity:
      name: Blind Entity
      description: The ESPSomfy cover entity to control
      selector:
        entity:
          domain: cover
    
    blind_id:
      name: Blind ID
      description: >
        Unique identifier for this blind (e.g., "dining", "lounge", "bedroom").
        Used to target events to this specific blind.
      selector:
        text:
    
    position_tracker:
      name: Position Tracker Entity
      description: >
        Input select helper to track current position.
        Create with options: "1", "2", "3", "4"
      selector:
        entity:
          domain: input_select
    
    # Position definitions (what each position represents)
    position_1_percent:
      name: Position 1 - Closed (%)
      description: What percentage Position 1 represents (usually 0 or 1 to avoid auto-rotation)
      default: 1
      selector:
        number:
          min: 0
          max: 10
          step: 1
          unit_of_measurement: "%"
    
    position_2_percent:
      name: Position 2 - First Middle (%)
      description: What percentage Position 2 represents (e.g., 33)
      default: 33
      selector:
        number:
          min: 10
          max: 50
          step: 1
          unit_of_measurement: "%"
    
    position_3_percent:
      name: Position 3 - Second Middle (%)
      description: What percentage Position 3 represents (e.g., 66)
      default: 66
      selector:
        number:
          min: 50
          max: 90
          step: 1
          unit_of_measurement: "%"
    
    position_4_percent:
      name: Position 4 - Open (%)
      description: What percentage Position 4 represents (usually 100)
      default: 100
      selector:
        number:
          min: 90
          max: 100
          step: 1
          unit_of_measurement: "%"
    
    # Timing configurations - from Position 4 (open) to others
    time_4_to_3:
      name: Time - Position 4 to 3 (ms)
      description: Time from fully open to second middle position
      default: 10000
      selector:
        number:
          min: 1000
          max: 60000
          step: 100
          unit_of_measurement: "ms"
    
    time_4_to_2:
      name: Time - Position 4 to 2 (ms)
      description: Time from fully open to first middle position
      default: 20000
      selector:
        number:
          min: 1000
          max: 60000
          step: 100
          unit_of_measurement: "ms"
    
    time_4_to_1:
      name: Time - Position 4 to 1 (ms)
      description: Time from fully open to closed
      default: 30000
      selector:
        number:
          min: 1000
          max: 60000
          step: 100
          unit_of_measurement: "ms"
    
    # Timing configurations - between middle positions
    time_3_to_2:
      name: Time - Position 3 to 2 (ms)
      description: Time from second middle to first middle position
      default: 10000
      selector:
        number:
          min: 1000
          max: 60000
          step: 100
          unit_of_measurement: "ms"
    
    time_3_to_1:
      name: Time - Position 3 to 1 (ms)
      description: Time from second middle position to closed
      default: 20000
      selector:
        number:
          min: 1000
          max: 60000
          step: 100
          unit_of_measurement: "ms"
    
    time_2_to_1:
      name: Time - Position 2 to 1 (ms)
      description: Time from first middle position to closed
      default: 10000
      selector:
        number:
          min: 1000
          max: 60000
          step: 100
          unit_of_measurement: "ms"
    
    # Reverse timings (going up)
    time_1_to_2:
      name: Time - Position 1 to 2 (ms)
      description: Time from closed to first middle position
      default: 10000
      selector:
        number:
          min: 1000
          max: 60000
          step: 100
          unit_of_measurement: "ms"
    
    time_1_to_3:
      name: Time - Position 1 to 3 (ms)
      description: Time from closed to second middle position
      default: 20000
      selector:
        number:
          min: 1000
          max: 60000
          step: 100
          unit_of_measurement: "ms"
    
    time_2_to_3:
      name: Time - Position 2 to 3 (ms)
      description: Time from first middle to second middle position
      default: 10000
      selector:
        number:
          min: 1000
          max: 60000
          step: 100
          unit_of_measurement: "ms"
    
    time_full_open:
      name: Time - Full Open Reset (ms)
      description: Time to fully open from any position (used for position reset)
      default: 35000
      selector:
        number:
          min: 1000
          max: 60000
          step: 100
          unit_of_measurement: "ms"
    
    reset_first:
      name: Always Reset Position First
      description: >
        Always go to fully open position before moving to target.
        Enable this if timing drift is a problem.
      default: false
      selector:
        boolean:

trigger:
  - platform: event
    event_type: vertical_blinds_move

variables:
  blind_id: !input blind_id
  position_tracker: !input position_tracker
  current_position: "{{ states(position_tracker) }}"
  target_position: "{{ trigger.event.data.position | string }}"
  reset_first: !input reset_first

condition:
  - condition: template
    value_template: "{{ trigger.event.data.blind_id == blind_id }}"

action:
  # Optional: Reset to known position first (go to position 4 - fully open)
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ reset_first and current_position != '4' }}"
        sequence:
          - service: espsomfy_rts.send_command
            data:
              entity_id: !input blind_entity
              command: "Up"
          - delay:
              milliseconds: !input time_full_open
          - service: input_select.select_option
            data:
              entity_id: !input position_tracker
              option: "4"
          - variables:
              current_position: "4"
  
  # Main movement logic based on current and target positions
  - choose:
      # Already at target position - do nothing
      - conditions:
          - condition: template
            value_template: "{{ current_position == target_position }}"
        sequence: []
      
      # From Position 4 (Open) to others
      - conditions:
          - condition: template
            value_template: "{{ current_position == '4' }}"
        sequence:
          - choose:
              # 4 → 3
              - conditions:
                  - condition: template
                    value_template: "{{ target_position == '3' }}"
                sequence:
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "Down"
                  - delay:
                      milliseconds: !input time_4_to_3
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "My"
              
              # 4 → 2
              - conditions:
                  - condition: template
                    value_template: "{{ target_position == '2' }}"
                sequence:
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "Down"
                  - delay:
                      milliseconds: !input time_4_to_2
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "My"
              
              # 4 → 1
              - conditions:
                  - condition: template
                    value_template: "{{ target_position == '1' }}"
                sequence:
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "Down"
                  - delay:
                      milliseconds: !input time_4_to_1
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "My"
      
      # From Position 3 to others
      - conditions:
          - condition: template
            value_template: "{{ current_position == '3' }}"
        sequence:
          - choose:
              # 3 → 4
              - conditions:
                  - condition: template
                    value_template: "{{ target_position == '4' }}"
                sequence:
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "Up"
                  - delay:
                      milliseconds: !input time_4_to_3
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "My"
              
              # 3 → 2
              - conditions:
                  - condition: template
                    value_template: "{{ target_position == '2' }}"
                sequence:
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "Down"
                  - delay:
                      milliseconds: !input time_3_to_2
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "My"
              
              # 3 → 1
              - conditions:
                  - condition: template
                    value_template: "{{ target_position == '1' }}"
                sequence:
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "Down"
                  - delay:
                      milliseconds: !input time_3_to_1
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "My"
      
      # From Position 2 to others
      - conditions:
          - condition: template
            value_template: "{{ current_position == '2' }}"
        sequence:
          - choose:
              # 2 → 4
              - conditions:
                  - condition: template
                    value_template: "{{ target_position == '4' }}"
                sequence:
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "Up"
                  - delay:
                      milliseconds: !input time_4_to_2
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "My"
              
              # 2 → 3
              - conditions:
                  - condition: template
                    value_template: "{{ target_position == '3' }}"
                sequence:
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "Up"
                  - delay:
                      milliseconds: !input time_2_to_3
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "My"
              
              # 2 → 1
              - conditions:
                  - condition: template
                    value_template: "{{ target_position == '1' }}"
                sequence:
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "Down"
                  - delay:
                      milliseconds: !input time_2_to_1
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "My"
      
      # From Position 1 (Closed) to others
      - conditions:
          - condition: template
            value_template: "{{ current_position == '1' }}"
        sequence:
          - choose:
              # 1 → 4
              - conditions:
                  - condition: template
                    value_template: "{{ target_position == '4' }}"
                sequence:
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "Up"
                  - delay:
                      milliseconds: !input time_4_to_1
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "My"
              
              # 1 → 3
              - conditions:
                  - condition: template
                    value_template: "{{ target_position == '3' }}"
                sequence:
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "Up"
                  - delay:
                      milliseconds: !input time_1_to_3
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "My"
              
              # 1 → 2
              - conditions:
                  - condition: template
                    value_template: "{{ target_position == '2' }}"
                sequence:
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "Up"
                  - delay:
                      milliseconds: !input time_1_to_2
                  - service: espsomfy_rts.send_command
                    data:
                      entity_id: !input blind_entity
                      command: "My"
  
  # Update position tracker after movement
  - service: input_select.select_option
    data:
      entity_id: !input position_tracker
      option: "{{ target_position }}"

mode: single
max_exceeded: silent