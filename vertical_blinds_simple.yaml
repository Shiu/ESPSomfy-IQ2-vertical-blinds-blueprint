blueprint:
  name: ESPSomfy Vertical Blinds State Tracker
  description: >
    Tracks the state of vertical blinds for automations.
    
    Simply updates a state helper whenever blind control events are fired.
    Use this to know if blinds are closed for presence-based lighting, etc.
    
    States tracked: open, closed, my, unknown
  
  domain: automation
  input:
    blind_id:
      name: Blind ID
      description: >
        Unique identifier for this blind (e.g., "dining", "lounge").
        Must match the blind_id used in your control events.
      selector:
        text:
    
    state_tracker:
      name: State Tracker Entity
      description: >
        Input select helper to track blind state.
        Create with options: "open", "closed", "my", "unknown"
      selector:
        entity:
          domain: input_select

trigger:
  - platform: event
    event_type: vertical_blinds_control

variables:
  blind_id: !input blind_id
  target_blind: "{{ trigger.event.data.blind_id | default('') }}"
  command: "{{ trigger.event.data.command | default('') }}"

condition:
  - condition: template
    value_template: "{{ target_blind == blind_id }}"

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ command == 'open' }}"
        sequence:
          - service: input_select.select_option
            data:
              entity_id: !input state_tracker
              option: "open"
      
      - conditions:
          - condition: template
            value_template: "{{ command == 'close' }}"
        sequence:
          - service: input_select.select_option
            data:
              entity_id: !input state_tracker
              option: "closed"
      
      - conditions:
          - condition: template
            value_template: "{{ command == 'my' }}"
        sequence:
          - service: input_select.select_option
            data:
              entity_id: !input state_tracker
              option: "my"
      
      - conditions:
          - condition: template
            value_template: "{{ command == 'stop' }}"
        sequence:
          - service: input_select.select_option
            data:
              entity_id: !input state_tracker
              option: "unknown"

mode: single
max_exceeded: silent